[tool.poetry]
name = "quest.py"
version = "0.2.2"
description = "Framework for coordinated, long-running processes"
authors = ["Gordon Bean <gbean@cs.byu.edu>"]
packages = [{include = "quest", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"

[tool.poetry.group.sql]
optional = true
[tool.poetry.group.sql.dependencies]
sqlalchemy = "^2.0.36"

[tool.poetry.plugins."quest.sql"]
sql_db = "quest.storage.sql:SQLDatabase"
sql_blob = "quest.storage.sql:SQLBlobStorage"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
